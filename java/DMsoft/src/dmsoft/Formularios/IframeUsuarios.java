/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package dmsoft.Formularios;

import dmsoft.Clases.Entidades.Roles;
import dmsoft.Clases.Entidades.Utilidades;
import java.awt.Dimension;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Dany_Hernandez
 */
public class IframeUsuarios extends javax.swing.JInternalFrame {

    /**
     * Creates new form IframeUsuarios
 * @param dimension
     */
        //Creamos objetos para los modelos de nuestra tablas
    DefaultTableModel modeloPrivilegios;
    DefaultTableModel modeloRoles;
    //Creamos un objeto de la clase Usuarios para usarlo
    Roles usuario=new Roles();
    //Creamos una variable bandera para detectar cambios
    private boolean realizoCambios=false;
    private boolean cambioPrivilegios=false;
    private int tipoOperacion;
    Utilidades utilidades=new Utilidades();
    
    public IframeUsuarios(Dimension dimension) {
        initComponents();
         //Eliminamos el border del JInternalFrame para que no nos muestre las opciones de arriba
        BasicInternalFrameUI bi = (BasicInternalFrameUI)this.getUI(); 
        bi.setNorthPane(null);
        setSize(dimension);
        
        
        modeloTablaPrivilegios();
        modeloTablaUsuario();
        resetDefault();
        usuario.llenarTablaPrivilegios(modeloPrivilegios, tblPrivilegios);
        usuario.llenarTablaRoles(modeloRoles, tblUsuarios,"");
        utilidades.setTableHeader(tblUsuarios);
        utilidades.setTableHeader(tblPrivilegios);
        btnRetornar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        tbpPrivilegios = new javax.swing.JTabbedPane();
        panelUsuarios = new javax.swing.JPanel();
        panelBuscarUsuario = new javax.swing.JPanel();
        txtBuscarUsuario = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        panelVerUsuarios = new javax.swing.JPanel();
        spneTblRoles = new javax.swing.JScrollPane();
        tblUsuarios = new javax.swing.JTable();
        panelPrivilegios = new javax.swing.JPanel();
        spneTablaPrivilegios = new javax.swing.JScrollPane();
        tblPrivilegios = new javax.swing.JTable();
        panelDatosUsuario = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNombreUsuarios = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        spneTxtaDescripcion = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextArea();
        txtIdUsuario = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        chkSeleccionarTodos = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        panelBotones = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnVer = new javax.swing.JButton();
        btnRetornar = new javax.swing.JButton();

        setBorder(null);
        setName("Usuarios"); // NOI18N

        tbpPrivilegios.setBackground(new java.awt.Color(250, 250, 250));
        tbpPrivilegios.setForeground(new java.awt.Color(51, 51, 51));
        tbpPrivilegios.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tbpPrivilegios.setFont(new java.awt.Font("Segoe UI Semibold", 1, 16)); // NOI18N
        tbpPrivilegios.setOpaque(true);

        panelUsuarios.setBackground(new java.awt.Color(250, 250, 250));
        panelUsuarios.setLayout(new java.awt.GridBagLayout());

        panelBuscarUsuario.setBackground(new java.awt.Color(246, 246, 246));
        panelBuscarUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        panelBuscarUsuario.setPreferredSize(new java.awt.Dimension(656, 90));
        panelBuscarUsuario.setRequestFocusEnabled(false);

        txtBuscarUsuario.setBackground(new java.awt.Color(252, 252, 252));
        txtBuscarUsuario.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        txtBuscarUsuario.setForeground(new java.awt.Color(51, 51, 51));
        txtBuscarUsuario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        txtBuscarUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarUsuarioKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Ingrese el nombre o ID");

        jLabel8.setBackground(new java.awt.Color(151, 196, 242));
        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(51, 51, 51));
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/buscar26.png"))); // NOI18N
        jLabel8.setText("Buscar usuario");
        jLabel8.setOpaque(true);

        javax.swing.GroupLayout panelBuscarUsuarioLayout = new javax.swing.GroupLayout(panelBuscarUsuario);
        panelBuscarUsuario.setLayout(panelBuscarUsuarioLayout);
        panelBuscarUsuarioLayout.setHorizontalGroup(
            panelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelBuscarUsuarioLayout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 109, Short.MAX_VALUE))
        );
        panelBuscarUsuarioLayout.setVerticalGroup(
            panelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelBuscarUsuarioLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(panelBuscarUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscarUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 39;
        gridBagConstraints.gridheight = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(14, 21, 5, 14);
        panelUsuarios.add(panelBuscarUsuario, gridBagConstraints);

        panelVerUsuarios.setLayout(new java.awt.BorderLayout(10, 0));

        spneTblRoles.setBackground(new java.awt.Color(153, 153, 255));

        tblUsuarios.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        tblUsuarios.setForeground(new java.awt.Color(51, 51, 51));
        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblUsuarios.setGridColor(new java.awt.Color(216, 216, 216));
        tblUsuarios.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tblUsuarios.setSelectionForeground(new java.awt.Color(51, 51, 51));
        tblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblUsuariosMousePressed(evt);
            }
        });
        spneTblRoles.setViewportView(tblUsuarios);

        panelVerUsuarios.add(spneTblRoles, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 39;
        gridBagConstraints.gridheight = 21;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 21, 8, 14);
        panelUsuarios.add(panelVerUsuarios, gridBagConstraints);

        tbpPrivilegios.addTab("Usuarios", panelUsuarios);

        panelPrivilegios.setBackground(new java.awt.Color(250, 250, 250));
        panelPrivilegios.setLayout(new java.awt.GridBagLayout());

        tblPrivilegios.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        tblPrivilegios.setForeground(new java.awt.Color(51, 51, 51));
        tblPrivilegios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPrivilegios.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        tblPrivilegios.setGridColor(new java.awt.Color(216, 216, 216));
        tblPrivilegios.setSelectionBackground(new java.awt.Color(204, 204, 255));
        tblPrivilegios.setSelectionForeground(new java.awt.Color(0, 51, 51));
        tblPrivilegios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPrivilegiosMouseClicked(evt);
            }
        });
        spneTablaPrivilegios.setViewportView(tblPrivilegios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 33;
        gridBagConstraints.gridheight = 20;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 21, 8, 14);
        panelPrivilegios.add(spneTablaPrivilegios, gridBagConstraints);

        panelDatosUsuario.setBackground(new java.awt.Color(246, 246, 246));
        panelDatosUsuario.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        panelDatosUsuario.setPreferredSize(new java.awt.Dimension(656, 170));
        panelDatosUsuario.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Nombre");

        txtNombreUsuarios.setBackground(new java.awt.Color(252, 252, 252));
        txtNombreUsuarios.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        txtNombreUsuarios.setForeground(new java.awt.Color(51, 51, 51));
        txtNombreUsuarios.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        txtNombreUsuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNombreUsuariosKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Descripción");

        spneTxtaDescripcion.setBorder(null);

        txtDescripcion.setBackground(new java.awt.Color(252, 252, 252));
        txtDescripcion.setColumns(16);
        txtDescripcion.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        txtDescripcion.setForeground(new java.awt.Color(51, 51, 51));
        txtDescripcion.setLineWrap(true);
        txtDescripcion.setRows(2);
        txtDescripcion.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyReleased(evt);
            }
        });
        spneTxtaDescripcion.setViewportView(txtDescripcion);

        txtIdUsuario.setEditable(false);
        txtIdUsuario.setBackground(new java.awt.Color(252, 252, 252));
        txtIdUsuario.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        txtIdUsuario.setForeground(new java.awt.Color(102, 102, 102));
        txtIdUsuario.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("ID usuario");

        chkSeleccionarTodos.setFont(new java.awt.Font("Segoe UI Semibold", 0, 13)); // NOI18N
        chkSeleccionarTodos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        chkSeleccionarTodos.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        chkSeleccionarTodos.setOpaque(false);
        chkSeleccionarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSeleccionarTodosActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("* Obligatorio");

        jLabel6.setFont(new java.awt.Font("Segoe UI Semibold", 1, 13)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel6.setText("Seleccionar todos los privilegios");

        jLabel7.setBackground(new java.awt.Color(151, 196, 242));
        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/formulario26.png"))); // NOI18N
        jLabel7.setText("Datos del usuario");
        jLabel7.setOpaque(true);

        javax.swing.GroupLayout panelDatosUsuarioLayout = new javax.swing.GroupLayout(panelDatosUsuario);
        panelDatosUsuario.setLayout(panelDatosUsuarioLayout);
        panelDatosUsuarioLayout.setHorizontalGroup(
            panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(panelDatosUsuarioLayout.createSequentialGroup()
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDatosUsuarioLayout.createSequentialGroup()
                        .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(183, 183, 183))
                    .addGroup(panelDatosUsuarioLayout.createSequentialGroup()
                        .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spneTxtaDescripcion, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtNombreUsuarios, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelDatosUsuarioLayout.createSequentialGroup()
                                .addComponent(chkSeleccionarTodos)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jLabel5)
                .addContainerGap())
        );
        panelDatosUsuarioLayout.setVerticalGroup(
            panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDatosUsuarioLayout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtNombreUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(3, 3, 3)
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spneTxtaDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelDatosUsuarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(chkSeleccionarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 20, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 33;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(14, 21, 5, 14);
        panelPrivilegios.add(panelDatosUsuario, gridBagConstraints);

        tbpPrivilegios.addTab("Agregar / Modificar usuario", panelPrivilegios);

        getContentPane().add(tbpPrivilegios, java.awt.BorderLayout.CENTER);

        panelBotones.setBackground(new java.awt.Color(250, 250, 250));
        panelBotones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(229, 229, 229)));
        panelBotones.setPreferredSize(new java.awt.Dimension(125, 23));
        panelBotones.setLayout(new java.awt.GridLayout(7, 0, 0, 5));

        btnNuevo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/agregar40.png"))); // NOI18N
        btnNuevo.setText("Nuevo");
        btnNuevo.setBorderPainted(false);
        btnNuevo.setContentAreaFilled(false);
        btnNuevo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevo.setFocusPainted(false);
        btnNuevo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNuevo.setPreferredSize(new java.awt.Dimension(70, 75));
        btnNuevo.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/agregar44.png"))); // NOI18N
        btnNuevo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNuevo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnNuevoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnNuevoFocusLost(evt);
            }
        });
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });
        panelBotones.add(btnNuevo);

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/guardar40.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setBorderPainted(false);
        btnGuardar.setContentAreaFilled(false);
        btnGuardar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardar.setFocusPainted(false);
        btnGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnGuardar.setPreferredSize(new java.awt.Dimension(70, 75));
        btnGuardar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/guardar44.png"))); // NOI18N
        btnGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnGuardar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnGuardarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnGuardarFocusLost(evt);
            }
        });
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        panelBotones.add(btnGuardar);

        btnEditar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/editar40.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setBorderPainted(false);
        btnEditar.setContentAreaFilled(false);
        btnEditar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEditar.setFocusPainted(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setPreferredSize(new java.awt.Dimension(70, 75));
        btnEditar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/editar44.png"))); // NOI18N
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnEditarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnEditarFocusLost(evt);
            }
        });
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        panelBotones.add(btnEditar);

        btnVer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/verPrivilegios40.png"))); // NOI18N
        btnVer.setText("Ver privilegios");
        btnVer.setBorderPainted(false);
        btnVer.setContentAreaFilled(false);
        btnVer.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVer.setFocusPainted(false);
        btnVer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVer.setPreferredSize(new java.awt.Dimension(70, 75));
        btnVer.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/verPrivilegios44.png"))); // NOI18N
        btnVer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVer.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnVerFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnVerFocusLost(evt);
            }
        });
        btnVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerActionPerformed(evt);
            }
        });
        panelBotones.add(btnVer);

        btnRetornar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnRetornar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/return40.png"))); // NOI18N
        btnRetornar.setText("Regresar");
        btnRetornar.setBorderPainted(false);
        btnRetornar.setContentAreaFilled(false);
        btnRetornar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRetornar.setFocusPainted(false);
        btnRetornar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRetornar.setPreferredSize(new java.awt.Dimension(70, 75));
        btnRetornar.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/dmsoft/Imagenes/return44.png"))); // NOI18N
        btnRetornar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRetornar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                btnRetornarFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                btnRetornarFocusLost(evt);
            }
        });
        btnRetornar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetornarActionPerformed(evt);
            }
        });
        panelBotones.add(btnRetornar);

        getContentPane().add(panelBotones, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtBuscarUsuarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarUsuarioKeyReleased
        usuario.llenarTablaRoles(modeloRoles, tblUsuarios, txtBuscarUsuario.getText());
    }//GEN-LAST:event_txtBuscarUsuarioKeyReleased

    private void tblUsuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsuariosMousePressed
        btnVer.setEnabled(true);
        btnEditar.setEnabled(true);
    }//GEN-LAST:event_tblUsuariosMousePressed

    private void tblPrivilegiosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPrivilegiosMouseClicked
        if(!cambioPrivilegios)
        cambioPrivilegios=new Utilidades().onChange(evt);
    }//GEN-LAST:event_tblPrivilegiosMouseClicked

    private void txtNombreUsuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreUsuariosKeyReleased
        if(!realizoCambios)
        realizoCambios= new Utilidades().onChange(evt);
    }//GEN-LAST:event_txtNombreUsuariosKeyReleased

    private void txtDescripcionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyReleased
        if(!realizoCambios)
        realizoCambios= new Utilidades().onChange(evt);
    }//GEN-LAST:event_txtDescripcionKeyReleased

    private void chkSeleccionarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSeleccionarTodosActionPerformed
        realizoCambios=true;
        if(chkSeleccionarTodos.isSelected())
        {
            for(int i=0;i<tblPrivilegios.getRowCount();i++)
            {
                tblPrivilegios.setValueAt(true, i, 2);
            }
        }
        else
        limpiarSeleccionPrivilegios();
    }//GEN-LAST:event_chkSeleccionarTodosActionPerformed

    private void btnNuevoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnNuevoFocusGained
        utilidades.setBackgroundFocused(btnNuevo);
    }//GEN-LAST:event_btnNuevoFocusGained

    private void btnNuevoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnNuevoFocusLost
        utilidades.setBackgroundDefocused(btnNuevo);
    }//GEN-LAST:event_btnNuevoFocusLost

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        returnHome(Utilidades.NUEVO);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnGuardarFocusGained
        utilidades.setBackgroundFocused(btnGuardar);
    }//GEN-LAST:event_btnGuardarFocusGained

    private void btnGuardarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnGuardarFocusLost
        utilidades.setBackgroundDefocused(btnGuardar);
    }//GEN-LAST:event_btnGuardarFocusLost

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        if((tipoOperacion==Utilidades.EDITAR||tipoOperacion==Utilidades.NUEVO)&&(realizoCambios||cambioPrivilegios))
        {
            if(!txtNombreUsuarios.getText().isEmpty())
            {
                //La funcion guardar determina que tipo de operacion se realizara
                //si es actualizacion o son datos nuevos
                guardar();
            }
            else
            JOptionPane.showMessageDialog(null, "El campo \"Nombre\" no puede ser vacio");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnEditarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnEditarFocusGained
        utilidades.setBackgroundFocused(btnEditar);
    }//GEN-LAST:event_btnEditarFocusGained

    private void btnEditarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnEditarFocusLost
        utilidades.setBackgroundDefocused(btnEditar);
    }//GEN-LAST:event_btnEditarFocusLost

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
       if(tipoOperacion==Utilidades.DEFAULT)
        {
            if(tblUsuarios.getSelectedRow()>=0)
            {
                //Validamos que no esten editando o creando un nuevo usuario

                    //LLamamos al metodo agregar pestaña para que nos agregue el panel de privilegios
                    agregarPestañas(panelPrivilegios, Utilidades.EDITAR);
                    tipoOperacion=Utilidades.EDITAR;
                    //para poder ver los privilegios del usuario pasamos como parametro su ID a la funcion que
                    //devuelve los privilegios
                    editarPrivilegios((int)tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0));
                    //Y por ultimo llenamos los campos de texto del usuario
                    llenarCamposTexto();
                    btnRetornar.setVisible(true);

            }
            else
            {
                JOptionPane.showMessageDialog(this, "Seleccione un usuario","Seleccione",JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnVerFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnVerFocusGained
        utilidades.setBackgroundFocused(btnVer);
    }//GEN-LAST:event_btnVerFocusGained

    private void btnVerFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnVerFocusLost
        utilidades.setBackgroundDefocused(btnVer);
    }//GEN-LAST:event_btnVerFocusLost

    private void btnVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerActionPerformed
       if(tipoOperacion==Utilidades.DEFAULT||tipoOperacion==Utilidades.EDITAR)
       {
        if(tblUsuarios.getSelectedRow()>=0)
        {
            verPrivilegios((int)tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0),tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 1).toString());
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Seleccione el un usuario","Advertencia",JOptionPane.WARNING_MESSAGE);
        }
      }
    }//GEN-LAST:event_btnVerActionPerformed

    private void btnRetornarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnRetornarFocusGained
        utilidades.setBackgroundFocused(btnRetornar);
    }//GEN-LAST:event_btnRetornarFocusGained

    private void btnRetornarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btnRetornarFocusLost
        utilidades.setBackgroundDefocused(btnRetornar);
    }//GEN-LAST:event_btnRetornarFocusLost

    private void btnRetornarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetornarActionPerformed
       utilidades.cambiarComponente(tbpPrivilegios, panelUsuarios, "Usuarios");
       btnRetornar.setVisible(false);
       tipoOperacion=Utilidades.DEFAULT;
    }//GEN-LAST:event_btnRetornarActionPerformed

    
   /*Con este metodo creamos el modelo que utilizara nuestra tabla privilegios*/
      void modeloTablaPrivilegios(){
      int anchos[]={60,250,80,500};//Dimension preferidad para las columnas
      String encabezado[]={"ID","Privilegio","Estado","Descripición"};
      
        modeloPrivilegios=new DefaultTableModel(null,encabezado){
              Class tipos[]={
              String.class,
              String.class,
              Boolean.class,
              String.class
              };

              @Override
              public Class getColumnClass(int index){
                  return tipos[index];
              }
              
              //Creamos un metodo para permitir editar solo la columna de estado
              boolean editable[]={false,false,true,false};
              @Override
              public boolean isCellEditable(int row, int column){
                 return editable[column];
              }
        };
        tblPrivilegios.setModel(modeloPrivilegios);

        /*Establecemos las dimensiones*/
         for(int i=0;i<tblPrivilegios.getColumnCount();i++)
          {
              tblPrivilegios.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
          }
           //Asignamos una ancho de columna
          tblPrivilegios.setRowHeight(25);
    }
  
     /*Este modelo se asigna a la tabla de roles y se determinan los anchos predefinidos y 
     su estilo*/
     void modeloTablaUsuario()
     {
      String encabezado[]={"ID","Nombre del usuario","Descripición"};
      modeloRoles=new DefaultTableModel(null,encabezado);
      
      tblUsuarios.setRowHeight(25);
      tblUsuarios.setModel(modeloRoles);
      estiloTablaUsuarios();
 
     }
     

     void estiloTablaUsuarios()
     {
        int anchos[]={50,200,600};
        for(int i=0;i<tblUsuarios.getColumnCount();i++)
        {
            tblUsuarios.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
        }
     }
        
    /*Con este metodo se seleccionan los privilegios que se le han asignado a un usuario*/
     void verPrivilegios(int id_rol, String user)
     {
        String datos="Privilegios del usuario "+user+":\n\n";
       //Hago una consulta para poder ver los roles que tiene un usuario
         usuario.consultaPrivilegios(id_rol);
        if(usuario.privilegiosLength()>0)
        {
            //Luego la condicion en el ciclo for sera la cantidad de privilegios obtenidos
           for(int i=0;i<usuario.privilegiosLength();i++)
           {
                datos+=(i+1)+" - "+tblPrivilegios.getValueAt(usuario.getPrivilegios(i)-1, 1).toString()+"\n";  
           }

           JOptionPane.showMessageDialog(null, datos,"Privilegios",JOptionPane.OK_OPTION,new ImageIcon(getClass().getResource("/dmsoft/Imagenes/trabajo46.png"))); 
        }
        else
            JOptionPane.showMessageDialog(null,datos+"No tiene privilegios asignados","Privilegios",JOptionPane.OK_OPTION,new ImageIcon(getClass().getResource("/dmsoft/Imagenes/trabajo46.png")));
     }
     
     void editarPrivilegios( int idRol)
     {
         //Hago una consulta para poder ver los roles que tiene un usuario
         usuario.consultaPrivilegios(idRol);
         
         /*Si la cantidad de privilegios que devuelve la funcion consulta es igual al numero
         de privilegios en la tabla privilegios, etonces marcamos chkSeleccionarTodo como true*/ 
         if(usuario.privilegiosLength()==tblPrivilegios.getRowCount())
             chkSeleccionarTodos.setSelected(true);
        
       //Luego marcamos como verdaderos todos los privilegios guardados
        for(int i=0;i<usuario.privilegiosLength();i++)
        {
            tblPrivilegios.setValueAt(true,usuario.getPrivilegios(i)-1, 2);
        }
     }
     
     
     //Con este metodo llenas los campos de Texto;
     private void llenarCamposTexto()
     {
            txtIdUsuario.setText(String.valueOf(tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 0)));
            txtNombreUsuarios.setText((String)tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 1));
            txtDescripcion.setText((String)tblUsuarios.getValueAt(tblUsuarios.getSelectedRow(), 2));
     }

     
     /*Con este metodo obtenemos los privilegios seleccionados de la tabla de privilegios y retorna
      un array con los valores obtenidos*/
     private ArrayList getPrivilegios()
     {
         ArrayList<Integer> privilegios=new ArrayList<>();
           for(int i=0;i<tblPrivilegios.getRowCount();i++)
           {
               if((boolean)tblPrivilegios.getValueAt(i, 2)==true)
               {
                   privilegios.add((int)tblPrivilegios.getValueAt(i, 0));
               }
           }
        return privilegios;
     }
     
     
     //Crea una configuracion por Default
      private void resetDefault()
      {
         /*limpiamos el tabed pane*/
          tipoOperacion=Utilidades.DEFAULT;
          realizoCambios=false;
          cambioPrivilegios=false;
          btnRetornar.setVisible(false);
          agregarPestañas(panelUsuarios,Utilidades.DEFAULT);
      }
 


     
      /*Con este metodo limpiamos los campos para crear un nuevo usuario*/
     private void limpiar(){
         txtNombreUsuarios.setText("");
         txtDescripcion.setText("");
         txtIdUsuario.setText("Generado por el sistema");
         txtBuscarUsuario.setText("");
         usuario.llenarTablaRoles(modeloRoles, tblUsuarios, "");
        //Limpiamos el campo de los privilegios
         tblUsuarios.clearSelection();
         tblPrivilegios.clearSelection();
         limpiarSeleccionPrivilegios();
         chkSeleccionarTodos.setSelected(false);
         
     }
     
     //con este metodo limpiamos los campos del privilegio
     void limpiarSeleccionPrivilegios()
     {
       for(int i=0;i<tblPrivilegios.getRowCount();i++)
         {
           tblPrivilegios.setValueAt(false, i, 2);
         } 
     
     }
     
     
     /*Con este metodo limpiamos la tabla*/
     private void limpiarTabla()
     {
        modeloRoles.setRowCount(0);
     }
    
     /*Con este metodo agreamos las pestañas al tabedPane*/
     private void agregarPestañas(JPanel componente,int tipoOperacion)
     {
         
         tbpPrivilegios.removeAll();
         tbpPrivilegios.add(componente);
         if(tipoOperacion==Utilidades.NUEVO)
         tbpPrivilegios.setTitleAt(0, "Crear nuevo usuario");

         else if(tipoOperacion==Utilidades.EDITAR)
         tbpPrivilegios.setTitleAt(0, "Editar datos de usuario");
         
         else
           tbpPrivilegios.setTitleAt(0, "Usuarios");
     }
     
     
    /*Con este metodo guardamos o actualizamos los privilegios
     del usuario dependiendo del tipo de operacion que realicemos*/
     private boolean guardar(){
          boolean operacion1=false,operacion2=false;
          if(tipoOperacion==Utilidades.NUEVO)
          {
             /*Ahora guardamos los privilegios del usuario pasando la funcion getPrivilegios 
             que retorna un ArrayList con todos los privilegios, si se guardaron correctamente
              devolvera un valor true */
              operacion2=usuario.guardarUsuario(txtNombreUsuarios.getText(), txtDescripcion.getText());
              operacion1= usuario.guardarPrivilegioUser(txtNombreUsuarios.getText(), getPrivilegios());
          }
          
          else if(tipoOperacion==Utilidades.EDITAR)
          {
              /*Ahora actualizamos los privilegios del usuario pasando la funcion getPrivilegios 
             que retorna un ArrayList con todos los privilegios, si se guardaron correctamente
             devolvera un valor true */
             operacion1=usuario.actualizarRoles(Integer.valueOf(txtIdUsuario.getText()), getPrivilegios());
             //Si se guardaron los privilegios entonces guardamos los datos
             if(operacion1)
                 
              operacion2= usuario.actualizarDatos(Integer.valueOf(txtIdUsuario.getText()), txtNombreUsuarios.getText(), txtDescripcion.getText());
              
          }
          
          /*Si se realizaron las dos operaciones correctamente, entonces limpiamos los campos
          y volvemos a la pestaña de empleados*/
          if(operacion1&&operacion2)
          {
             
            if(tipoOperacion==Utilidades.EDITAR)
                JOptionPane.showMessageDialog(null,"Datos actualizados con exito");
            else if(tipoOperacion==Utilidades.NUEVO)
                JOptionPane.showMessageDialog(null,"Datos guardados con exito");
            
            limpiar();
            limpiarTabla();
            resetDefault();
            //llenamos la tabla de los usuarios con los nuevos datos agregados
            usuario.llenarTablaRoles(modeloRoles, tblUsuarios,"");
            
          }
         else
           JOptionPane.showMessageDialog(null, "Error al enviar datos");
          //Por ultimo retornamos un solo valor true o false provenientes de 
          //resolver el operador logico AND que para que se true ambos variables deben ser true
          return (operacion1&&operacion2);
     }
     
    //Validamos que podemos salir sin perder datos
   private void returnHome(int salida){
       //Comprobamos los que tipo de salida es

    if(utilidades.validarSalida(realizoCambios,cambioPrivilegios))
       {
         int opcion=JOptionPane.showConfirmDialog(null,"Los datos se modificaron.\n"
                                           + "¿Desea guardar los cambios?","Salir",JOptionPane.YES_NO_CANCEL_OPTION,JOptionPane.QUESTION_MESSAGE);
           if(opcion==JOptionPane.YES_OPTION)
           {
               if(guardar())
                   
                //Si todo se guardo correctamente entonces el metodo salir determina si se sale del p
                //programa o regesa al panel de usarios, depende del parametreo salida
                salir(salida);
                             
           }
           else if(opcion==JOptionPane.NO_OPTION)
           {
               salir(salida);
           }
       }
       else
            salir(salida);
    }
   
   //Este metodo es para determinar si se regresa al panel de usuario o solo se sale del formulario
   private void salir(int tipoSalida){
       if(tipoSalida==Utilidades.SALIR)
       {
           //dispose();
       }
              
       else if(tipoSalida==Utilidades.REGRESAR)
       {
            limpiar();
            resetDefault();
       }
       else if(tipoSalida==Utilidades.NUEVO)
       {
            //Limpiamos los campos para crear un nuevo usuario
            limpiar();
            /*LLamamos al método para agregar el panel de privilegios al JTabbedPane
            y le expecificamos sera un "Usuario Nuevo" */
            agregarPestañas(panelPrivilegios,Utilidades.NUEVO);
            //Guardamos el tipo de operacion en la variable para saber si es guardar o actualizar lo que aremos
            tipoOperacion=Utilidades.NUEVO;
            btnRetornar.setVisible(true);
            //Establecemos nuestras variables centinelas como falsas 
            realizoCambios=false;
            cambioPrivilegios=false;
       }
   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnRetornar;
    private javax.swing.JButton btnVer;
    private javax.swing.JCheckBox chkSeleccionarTodos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelBuscarUsuario;
    private javax.swing.JPanel panelDatosUsuario;
    private javax.swing.JPanel panelPrivilegios;
    private javax.swing.JPanel panelUsuarios;
    private javax.swing.JPanel panelVerUsuarios;
    private javax.swing.JScrollPane spneTablaPrivilegios;
    private javax.swing.JScrollPane spneTblRoles;
    private javax.swing.JScrollPane spneTxtaDescripcion;
    private javax.swing.JTable tblPrivilegios;
    private javax.swing.JTable tblUsuarios;
    private javax.swing.JTabbedPane tbpPrivilegios;
    private javax.swing.JTextField txtBuscarUsuario;
    private javax.swing.JTextArea txtDescripcion;
    private javax.swing.JTextField txtIdUsuario;
    private javax.swing.JTextField txtNombreUsuarios;
    // End of variables declaration//GEN-END:variables
}
